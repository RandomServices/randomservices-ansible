upstream {{ app.name }} {
  server unix:/tmp/{{ app.name }}_web.sock fail_timeout=0;
}

{% for virtual_host in app.virtual_hosts %}

  server {

    {% if virtual_host.listen_address is defined %}
      listen {{ virtual_host.listen_address }}:80 default_server;
    {% else %}
      listen 80;
    {% endif %}

    server_name {{ virtual_host.name }}{% for host in (virtual_host.additional_names | default([])) %} {{ host }}{% endfor %};

    {% if virtual_host.redirect_to_strip_www | default(false) %}
      if ($host ~* ^www\.(.*)) {
          set $host_without_www $1;
          {% if virtual_host.ssl is defined %}
            rewrite ^(.*) https://$host_without_www$1 permanent;
          {% else %}
            rewrite ^(.*) http://$host_without_www$1 permanent;
          {% endif %}
          break;
      }
    {% endif %}
  
    {% if virtual_host.ssl is defined %}
      return 301 https://$host$request_uri;
    {% else %}{# virtual_host.ssl is defined #}
      root /var/www/{{ app.name }}/current/public;

      gzip                        on;
      gzip_min_length             100;
      gzip_proxied                expired no-cache no-store private auth;
      gzip_types                  text/plain application/xml text/css application/x-javascript text/javascript application/javascript;
      gzip_disable                "MSIE [1-6]\.";

      try_files $uri @{{ app.name }};

      client_max_body_size 10M;

      location ~ ^/(assets)/ {
        gzip_static on;
        add_header Cache-Control public;
      }

      location /cable {
        proxy_pass http://{{ app.name }};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
      }

      location @{{ app.name }} {
        proxy_pass http://{{ app.name }};
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
      }
    {% endif %}{# virtual_host.ssl is defined #}
  }
  
  {% if virtual_host.redirection_hosts is defined %}
    server {
      {% if virtual_host.listen_address is defined %}
        listen {{ virtual_host.listen_address }}:80;
      {% else %}
        listen 80;
      {% endif %}

      server_name {% for host in virtual_host.redirection_hosts %} {{ host }}{% endfor %};

      {% if virtual_host.ssl is defined %}
        return 301 https://{{ virtual_host.name }}$request_uri;
      {% else %}{# virtual_host.ssl is defined #}
        return 301 http://{{ virtual_host.name }}$request_uri;
      {% endif %}{# virtual_host.ssl is defined #}
    }
    
    {% if virtual_host.ssl is defined %}
      server {

        {% if virtual_host.listen_address is defined %}
          listen {{ virtual_host.listen_address }}:443 ssl;
        {% else %}
          listen 443 ssl;
        {% endif %}

        server_name {% for host in virtual_host.redirection_hosts %} {{ host }}{% endfor %};

        ssl_certificate /etc/nginx/ssl/{{ app.name }}-{{ virtual_host.name }}.crt;
        ssl_certificate_key /etc/nginx/ssl/{{ app.name }}-{{ virtual_host.name }}.key;
        ssl_protocols TLSv1.2;

        return 301 https://{{ virtual_host.name }}$request_uri;
      }
    {% endif %}{# virtual_host.ssl is defined #}
  {% endif %}{# virtual_host.redirection_hosts is defined #}


  {% if virtual_host.ssl is defined %}

    server {

      {% if virtual_host.listen_address is defined %}
        listen {{ virtual_host.listen_address }}:443 ssl default_server;
      {% else %}
        listen 443 ssl;
      {% endif %}

      server_name {{ virtual_host.name }}{% for host in (virtual_host.additional_names | default([])) %} {{ host }}{% endfor %};

      ssl_certificate /etc/nginx/ssl/{{ app.name }}-{{ virtual_host.name }}.crt;
      ssl_certificate_key /etc/nginx/ssl/{{ app.name }}-{{ virtual_host.name }}.key;
      ssl_protocols TLSv1.2;

      root /var/www/{{ app.name }}/current/public;

      gzip                        on;
      gzip_min_length             100;
      gzip_proxied                expired no-cache no-store private auth;
      gzip_types                  text/plain application/xml text/css application/x-javascript text/javascript application/javascript;
      gzip_disable                "MSIE [1-6]\.";

      {% if virtual_host.redirect_to_strip_www | default(false) %}
        if ($host ~* ^www\.(.*)) {
            set $host_without_www $1;
            rewrite ^(.*) http://$host_without_www$1 permanent;
            break;
        }
      {% endif %}

      try_files $uri @{{ app.name }};

      client_max_body_size 10M;

      location ~ ^/(assets)/ {
        gzip_static on;
        add_header Cache-Control public;
      }

      location @{{ app.name }} {
        proxy_pass http://{{ app.name }};
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
      }
    }

  {% endif %}{# virtual_host.ssl is defined #}

{% endfor %}{# virtual_host #}
